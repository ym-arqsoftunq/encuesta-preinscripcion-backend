language: python
branches:
  only:
    - master
deploy:
  provider: heroku
  api_key: c6efefcf-08ef-4271-aa6f-757ba235d957
  app: encuesta-preinscripcion-bknd

env:
  # You may want to update this to whatever the latest version is, or keep it
  # the same as your local machines. However, I have only tested it with 1.8.0+.
  # There should be a time in the future when this is not necessary - it is
  # explained in more detail below.
  DOCKER_COMPOSE_VERSION: 1.14.0

before_install:
  - sudo apt-get update
  # Now we can install the newer docker-engine which is required for the newer
  # docker-composer we will install next. The messy options are to force it to
  # be non-interactive (normally it asks you a bunch of config questions).
  - sudo apt-get install -o Dpkg::Options::="--force-confold" --force-yes -y docker-engine

  # Print out the current docker-compose version. Once this reports 1.6+ then we
  # do not need the following steps.
  - docker-compose --version
  # As of the writing of this script Travis has docker-compose v1.4.2, we need
  # to update it to 1.8+. $DOCKER_COMPOSE_VERSION is provide from the `env`
  # above.
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  # Setup your application stack. You may need to tweak these commands if you
  # doing out-of-the-ordinary docker-compose builds.
  - docker-compose build
  - docker-compose up -d

  # You will want this for logging. If one of your containers does not build for
  # whatever reason it's best to report that now before your tests start
  # otherwise it can be really tricky to debug why tests are failing sometimes.
  - docker ps

script:
  - docker-compose run --rm encuesta-preinscripcion-backend pytest

cache:
  - pip

sudo: required

services:
  - docker
